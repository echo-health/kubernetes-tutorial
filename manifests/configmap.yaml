---
apiVersion: v1
kind: Namespace
metadata:
    name: hello-world-staging
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: app-config
    namespace: hello-world
data:
    environment: staging
---
apiVersion: v1
kind: Namespace
metadata:
    name: hello-world
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: app-config
    namespace: hello-world-staging
data:
    envfile: |-
        {
            "environment": "staging"
        }
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: hello-world
    namespace: hello-world # if we don't specify namespace, it goes into "default" - this is bad practice
    labels:
        app: hello-world 
        app-type: web-server # this label will only apply to the deployment
spec:
    replicas: 3 # how many copies of the pod we want to deploy: we can also specify constraints of where they are deployed
    selector:
        matchLabels:
            app: hello-world # this may be optional - generally kubernetes figures out label selectors for you by what labels are applied in the template
    template: # from here on is effectively the pod's yaml
        metadata:
            labels:
                app: hello-world
        spec:
            containers:
            - name: hello-world
              image: hello-world:env
              env:
              - name: ENVIRONMENT 
                valueFrom:
                    configMapKeyRef:
                        name: app-config
                        key: environment
              ports:
              - containerPort: 8080 # need to specify this so that it is exposed to other things in the namespace e.g services
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: hello-world
    namespace: hello-world-staging # if we don't specify namespace, it goes into "default" - this is bad practice
    labels:
        app: hello-world 
        app-type: web-server # this label will only apply to the deployment
spec:
    replicas: 3 # how many copies of the pod we want to deploy: we can also specify constraints of where they are deployed
    selector:
        matchLabels:
            app: hello-world # this may be optional - generally kubernetes figures out label selectors for you by what labels are applied in the template
    template: # from here on is effectively the pod's yaml
        metadata:
            labels:
                app: hello-world
        spec:
            containers:
            - name: hello-world
              image: hello-world:env-file
              ports:
              - containerPort: 8080 # need to specify this so that it is exposed to other things in the namespace e.g services
              volumeMounts:
              - name: config-volume
                mountPath: /etc/config
            volumes:
            - name: config-volume
              configMap:
                # Provide the name of the ConfigMap containing the files you want
                # to add to the container
                name: app-config